apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-svc-argo
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: demo-svc-argo
  template:
    metadata:
      labels:
        app: demo-svc-argo
        app.kubernetes.io/name: {{ .Values.keptn.service }}
        app.kubernetes.io/instance: "{{ .Values.keptn.service }}-{{ .Values.keptn.deployment }}"
        app.kubernetes.io/managed-by: Keptn
        app.kubernetes.io/version: {{ (split ":" .Values.image)._1 | default "latest" }}
    spec:
      containers:
        - name: demo-svc-argo
          image: "{{ .Values.image }}"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
          - name: DT_CUSTOM_PROP
            value: "version={{ .Chart.Version }} revision={{ .Release.Revision }} releasename={{ .Release.Name }} keptn_project={{ .Values.keptn.project }} keptn_service={{ .Values.keptn.service }} keptn_stage={{ .Values.keptn.stage }} keptn_deployment={{ .Values.keptn.deployment }}"
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: "metadata.name"
          - name: DEPLOYMENT_NAME
            valueFrom:
              fieldRef:
                fieldPath: "metadata.labels['deployment']"
          - name: CONTAINER_IMAGE
            value: "{{ .Values.image }}"
          - name: KEPTN_PROJECT
            value: "{{ .Chart.Name }}"
          - name: KEPTN_STAGE
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          - name: KEPTN_SERVICE
            value: "demo-svc-argo"
